package org.example.ravelry;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.5.1
 * 2012-05-19T17:42:14.926+10:00
 * Generated source version: 2.5.1
 * 
 */
@WebService(targetNamespace = "http://www.example.org/Ravelry", name = "RavelryPortType")
@XmlSeeAlso({ObjectFactory.class})
public interface RavelryPortType {

    @RequestWrapper(localName = "sellPattern", targetNamespace = "http://www.example.org/Ravelry", className = "org.example.ravelry.SellPattern")
    @WebMethod
    @ResponseWrapper(localName = "sellPatternResponse", targetNamespace = "http://www.example.org/Ravelry", className = "org.example.ravelry.SellPatternResponse")
    public void sellPattern(
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "yarns_value", targetNamespace = "")
        double yarnsValue,
        @WebParam(mode = WebParam.Mode.OUT, name = "balance", targetNamespace = "")
        javax.xml.ws.Holder<java.lang.Double> balance,
        @WebParam(mode = WebParam.Mode.OUT, name = "file", targetNamespace = "")
        javax.xml.ws.Holder<byte[]> file
    ) throws InsufficientFundsFault, AccessDeniedFault, PatternNotFoundFault;

    @WebResult(name = "message", targetNamespace = "")
    @RequestWrapper(localName = "uploadPattern", targetNamespace = "http://www.example.org/Ravelry", className = "org.example.ravelry.UploadPattern")
    @WebMethod
    @ResponseWrapper(localName = "uploadPatternResponse", targetNamespace = "http://www.example.org/Ravelry", className = "org.example.ravelry.UploadPatternResponse")
    public java.lang.String uploadPattern(
        @WebParam(name = "file", targetNamespace = "")
        byte[] file,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "price", targetNamespace = "")
        double price
    ) throws InvalidPriceFault, AccessDeniedFault, InvalidFileFault, NameAlreadyExistsFault;
}
